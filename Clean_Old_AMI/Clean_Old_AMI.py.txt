import boto3
from datetime import datetime, timedelta

def clean_old_amis():
    # Initialize Boto3 clients
    ec2_client = boto3.client('ec2')

    # Get current timestamp
    now = datetime.now()

    # Define the age limit for AMIs (in days)
    ami_age_limit = 30  # Change this to your desired age limit

    # Calculate the cutoff timestamp based on the age limit
    cutoff_date = now - timedelta(days=ami_age_limit)

    # Retrieve a list of AMIs
    amis = ec2_client.describe_images(Owners=['self'])['Images']

    # Iterate through each AMI and deregister if it's older than the cutoff date
    for ami in amis:
        ami_creation_date = ami['CreationDate']
        ami_id = ami['ImageId']
        
        # Parse the AMI creation date string to a datetime object
        ami_creation_datetime = datetime.strptime(ami_creation_date, '%Y-%m-%dT%H:%M:%S.%fZ')

        # Compare the AMI creation date with the cutoff date
        if ami_creation_datetime < cutoff_date:
            print(f"Deregistering AMI: {ami_id}")
            # Deregister the AMI
            ec2_client.deregister_image(ImageId=ami_id)
            # Optionally, you can also delete associated snapshots if needed
            for block_device in ami['BlockDeviceMappings']:
                if 'Ebs' in block_device:
                    snapshot_id = block_device['Ebs']['SnapshotId']
                    print(f"Deleting snapshot: {snapshot_id}")
                    ec2_client.delete_snapshot(SnapshotId=snapshot_id)

# Execute the function to clean old AMIs
clean_old_amis()
